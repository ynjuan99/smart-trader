using System;
using System.Diagnostics;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using OptimizerModel;

namespace OptimizerUnitTest
{
    [TestClass]
    public class DataContextTest
    {
        [TestMethod]
        public void TestMethod1()
        {
            var path = @"D:\SmartTrader\SVN\CA\AdsAssignmentOptimizer\WS1Data.csv";
            //var plan = AdAssignmentPlanner.PlanViaNN(path);
            #region Result
            /*
================================================================================================
Ad Assignment:
    Website 1: Start time - 17.4, End time - 19.6, Ad 1
    Website 2: Start time - 13.4, End time - 18.5, Ad 4
    Website 3: Start time - 13.2, End time - 21.5, Ad 6
    Website 4: Start time - 12.0, End time - 22.6, Ad 2
    Website 5: Start time - 18.6, End time - 24.0, Ad 5
Total cost - 300.00, User clicks - 440530
------------------------------------------------------------------------------------------------
Optimal Neural Network Parameters:
    Input nodes - 15, Output nodes - 1, Hidden Layers - 1
    Layer-Neuro[01,01] weights - 0.470,0.369,-0.046,0.730,0.716,-0.324,0.169,0.848,0.439,0.356,0.020,0.621,0.723,-0.683,0.245
    Layer-Neuro[01,02] weights - 0.808,0.635,0.688,0.290,0.217,0.504,-0.543,-0.115,0.156,-0.238,0.764,1.136,0.223,0.580,0.519
    Layer-Neuro[01,03] weights - 0.147,0.689,1.674,-0.126,0.344,0.019,1.159,0.677,0.426,-0.659,0.650,1.213,0.124,0.453,0.109
    Layer-Neuro[01,04] weights - 1.075,-0.710,0.835,0.651,0.015,0.433,0.508,-0.621,0.259,1.177,0.038,-0.031,-0.154,-0.195,0.546
    Layer-Neuro[01,05] weights - -0.169,0.863,0.256,0.823,-1.051,0.134,-0.603,0.403,-0.003,-0.257,1.193,0.653,-0.023,-0.057,0.619
    Layer-Neuro[01,06] weights - -0.124,0.464,0.511,-0.374,-0.305,1.077,-0.145,0.624,0.145,0.517,0.205,-0.194,0.345,0.156,1.283
    Layer-Neuro[01,07] weights - 0.201,0.800,1.233,0.530,0.630,0.516,-1.268,-0.027,0.145,0.233,0.705,0.611,0.222,0.761,0.840
    Layer-Neuro[01,08] weights - -0.228,0.329,0.192,0.125,2.048,0.073,-0.269,0.260,0.237,-0.073,0.223,0.481,-0.314,0.074,0.205
    Layer-Neuro[01,09] weights - 1.484,-0.271,0.186,1.482,1.252,0.357,0.320,0.905,-0.018,-0.565,0.605,-0.034,0.409,-0.534,0.332
    Layer-Neuro[01,10] weights - -0.116,0.108,0.055,-0.522,0.296,0.775,-0.282,0.763,0.685,-0.572,0.645,1.358,-0.855,1.123,0.963
    Layer-Neuro[01,11] weights - 0.435,0.481,0.083,0.543,0.078,0.316,0.241,-0.151,0.435,0.371,-0.033,0.744,-0.149,0.779,0.112
    Layer-Neuro[01,12] weights - 0.307,-0.575,0.191,0.863,0.120,-0.580,0.669,0.027,-0.832,0.752,-0.697,-0.619,0.364,-0.188,-0.754
    Layer-Neuro[01,13] weights - -0.552,0.547,0.191,-0.419,0.429,0.065,0.651,0.024,0.167,0.329,-0.245,1.560,0.453,0.098,-0.055
    Layer-Neuro[01,14] weights - 1.899,0.997,0.473,-0.212,-0.342,0.715,1.323,0.599,-0.349,0.222,0.669,-0.315,0.955,0.705,0.271
    Layer-Neuro[01,15] weights - -0.028,0.547,1.302,-0.051,0.757,-0.550,0.422,1.160,0.944,0.148,0.572,0.578,0.061,-0.415,0.038
    Layer-Neuro[01,16] weights - -0.199,-0.670,0.307,0.969,-0.389,0.844,0.979,0.329,0.235,0.879,0.537,0.548,0.541,0.792,1.342
    Layer-Neuro[01,17] weights - 0.466,0.192,0.223,0.181,-0.203,0.783,0.065,1.199,0.074,0.362,0.118,0.970,0.440,0.678,0.018
    Layer-Neuro[01,18] weights - -0.016,-0.710,-0.223,0.272,0.098,0.534,-0.217,0.621,-0.533,0.084,0.841,0.023,0.216,0.958,0.045
    Layer-Neuro[01,19] weights - -0.549,1.000,0.481,0.491,-0.439,-0.193,0.297,0.567,0.279,-0.268,0.712,0.141,-0.643,1.259,-0.376
    Layer-Neuro[01,20] weights - 0.812,-0.214,0.272,-1.617,0.803,0.060,-1.391,1.957,-0.065,-0.852,0.262,0.009,-0.252,0.352,-0.379
    Layer-Neuro[01,21] weights - -0.779,0.802,1.299,0.423,0.162,0.348,0.317,0.827,0.487,-0.497,-0.315,0.567,1.060,-0.033,0.525
    Layer-Neuro[01,22] weights - -0.216,-0.052,-0.049,0.190,0.331,-0.696,-0.491,0.416,-0.440,0.719,0.060,-0.181,-0.150,0.818,0.056
    Layer-Neuro[01,23] weights - -0.608,-0.448,0.260,0.161,0.175,0.114,0.270,-0.161,0.681,-0.432,-0.097,0.185,-0.672,1.232,-0.204
    Layer-Neuro[01,24] weights - -0.709,-0.295,0.552,1.403,-0.854,0.599,1.111,-0.408,0.504,0.663,-0.530,1.757,0.689,-0.619,0.399
    Layer-Neuro[01,25] weights - 0.439,-0.658,-0.023,0.972,-0.519,-0.392,0.381,-0.259,-0.150,0.440,-0.621,0.085,0.208,2.131,-0.099
    Layer-Neuro[01,26] weights - 0.293,0.030,1.395,-0.015,-0.044,0.708,-0.499,1.022,0.054,-0.524,0.746,0.930,0.593,0.605,0.076
    Layer-Neuro[01,27] weights - 1.220,-0.616,1.249,0.818,-0.648,0.872,0.790,-0.825,0.699,0.453,-0.159,1.214,1.292,-0.400,0.810
    Layer-Neuro[01,28] weights - 1.087,0.074,0.674,0.106,0.031,0.677,-0.299,1.253,-0.003,0.265,1.730,0.604,0.227,1.195,0.866
    Layer-Neuro[01,29] weights - 0.144,0.224,0.985,0.322,0.654,0.394,1.062,0.606,0.783,-0.242,0.336,-0.672,-0.211,-0.030,0.343
    Layer-Neuro[01,30] weights - 0.224,-0.139,-0.229,0.660,-0.023,0.490,0.356,1.424,0.176,0.989,0.056,0.246,0.727,-0.524,1.319
    Output-Layer-Neuro[01,01] weights - 0.470,0.369,-0.046,0.730,0.716,-0.324,0.169,0.848,0.439,0.356,0.020,0.621,0.723,-0.683,0.245
    Output-Layer-Neuro[01,02] weights - 0.808,0.635,0.688,0.290,0.217,0.504,-0.543,-0.115,0.156,-0.238,0.764,1.136,0.223,0.580,0.519
    Output-Layer-Neuro[01,03] weights - 0.147,0.689,1.674,-0.126,0.344,0.019,1.159,0.677,0.426,-0.659,0.650,1.213,0.124,0.453,0.109
    Output-Layer-Neuro[01,04] weights - 1.075,-0.710,0.835,0.651,0.015,0.433,0.508,-0.621,0.259,1.177,0.038,-0.031,-0.154,-0.195,0.546
    Output-Layer-Neuro[01,05] weights - -0.169,0.863,0.256,0.823,-1.051,0.134,-0.603,0.403,-0.003,-0.257,1.193,0.653,-0.023,-0.057,0.619
    Output-Layer-Neuro[01,06] weights - -0.124,0.464,0.511,-0.374,-0.305,1.077,-0.145,0.624,0.145,0.517,0.205,-0.194,0.345,0.156,1.283
    Output-Layer-Neuro[01,07] weights - 0.201,0.800,1.233,0.530,0.630,0.516,-1.268,-0.027,0.145,0.233,0.705,0.611,0.222,0.761,0.840
    Output-Layer-Neuro[01,08] weights - -0.228,0.329,0.192,0.125,2.048,0.073,-0.269,0.260,0.237,-0.073,0.223,0.481,-0.314,0.074,0.205
    Output-Layer-Neuro[01,09] weights - 1.484,-0.271,0.186,1.482,1.252,0.357,0.320,0.905,-0.018,-0.565,0.605,-0.034,0.409,-0.534,0.332
    Output-Layer-Neuro[01,10] weights - -0.116,0.108,0.055,-0.522,0.296,0.775,-0.282,0.763,0.685,-0.572,0.645,1.358,-0.855,1.123,0.963
    Output-Layer-Neuro[01,11] weights - 0.435,0.481,0.083,0.543,0.078,0.316,0.241,-0.151,0.435,0.371,-0.033,0.744,-0.149,0.779,0.112
    Output-Layer-Neuro[01,12] weights - 0.307,-0.575,0.191,0.863,0.120,-0.580,0.669,0.027,-0.832,0.752,-0.697,-0.619,0.364,-0.188,-0.754
    Output-Layer-Neuro[01,13] weights - -0.552,0.547,0.191,-0.419,0.429,0.065,0.651,0.024,0.167,0.329,-0.245,1.560,0.453,0.098,-0.055
    Output-Layer-Neuro[01,14] weights - 1.899,0.997,0.473,-0.212,-0.342,0.715,1.323,0.599,-0.349,0.222,0.669,-0.315,0.955,0.705,0.271
    Output-Layer-Neuro[01,15] weights - -0.028,0.547,1.302,-0.051,0.757,-0.550,0.422,1.160,0.944,0.148,0.572,0.578,0.061,-0.415,0.038
    Output-Layer-Neuro[01,16] weights - -0.199,-0.670,0.307,0.969,-0.389,0.844,0.979,0.329,0.235,0.879,0.537,0.548,0.541,0.792,1.342
    Output-Layer-Neuro[01,17] weights - 0.466,0.192,0.223,0.181,-0.203,0.783,0.065,1.199,0.074,0.362,0.118,0.970,0.440,0.678,0.018
    Output-Layer-Neuro[01,18] weights - -0.016,-0.710,-0.223,0.272,0.098,0.534,-0.217,0.621,-0.533,0.084,0.841,0.023,0.216,0.958,0.045
    Output-Layer-Neuro[01,19] weights - -0.549,1.000,0.481,0.491,-0.439,-0.193,0.297,0.567,0.279,-0.268,0.712,0.141,-0.643,1.259,-0.376
    Output-Layer-Neuro[01,20] weights - 0.812,-0.214,0.272,-1.617,0.803,0.060,-1.391,1.957,-0.065,-0.852,0.262,0.009,-0.252,0.352,-0.379
    Output-Layer-Neuro[01,21] weights - -0.779,0.802,1.299,0.423,0.162,0.348,0.317,0.827,0.487,-0.497,-0.315,0.567,1.060,-0.033,0.525
    Output-Layer-Neuro[01,22] weights - -0.216,-0.052,-0.049,0.190,0.331,-0.696,-0.491,0.416,-0.440,0.719,0.060,-0.181,-0.150,0.818,0.056
    Output-Layer-Neuro[01,23] weights - -0.608,-0.448,0.260,0.161,0.175,0.114,0.270,-0.161,0.681,-0.432,-0.097,0.185,-0.672,1.232,-0.204
    Output-Layer-Neuro[01,24] weights - -0.709,-0.295,0.552,1.403,-0.854,0.599,1.111,-0.408,0.504,0.663,-0.530,1.757,0.689,-0.619,0.399
    Output-Layer-Neuro[01,25] weights - 0.439,-0.658,-0.023,0.972,-0.519,-0.392,0.381,-0.259,-0.150,0.440,-0.621,0.085,0.208,2.131,-0.099
    Output-Layer-Neuro[01,26] weights - 0.293,0.030,1.395,-0.015,-0.044,0.708,-0.499,1.022,0.054,-0.524,0.746,0.930,0.593,0.605,0.076
    Output-Layer-Neuro[01,27] weights - 1.220,-0.616,1.249,0.818,-0.648,0.872,0.790,-0.825,0.699,0.453,-0.159,1.214,1.292,-0.400,0.810
    Output-Layer-Neuro[01,28] weights - 1.087,0.074,0.674,0.106,0.031,0.677,-0.299,1.253,-0.003,0.265,1.730,0.604,0.227,1.195,0.866
    Output-Layer-Neuro[01,29] weights - 0.144,0.224,0.985,0.322,0.654,0.394,1.062,0.606,0.783,-0.242,0.336,-0.672,-0.211,-0.030,0.343
    Output-Layer-Neuro[01,30] weights - 0.224,-0.139,-0.229,0.660,-0.023,0.490,0.356,1.424,0.176,0.989,0.056,0.246,0.727,-0.524,1.319

================================================================================================
             */
            
            #endregion

            var plan = AdAssignmentPlanner.PlanViaGA(path);
            #region Result
            /*
================================================================================================
Ad Assignment:
	Website 1: Start time - 17.4, End time - 19.6, Ad 3
	Website 2: Start time - 13.4, End time - 18.4, Ad 1
	Website 3: Start time - 13.4, End time - 22.8, Ad 6
	Website 4: Start time - 12.4, End time - 22.7, Ad 4
	Website 5: Start time - 18.6, End time - 23.5, Ad 5
Total cost - 299.85, User clicks - 336100
------------------------------------------------------------------------------------------------
Optimal Formula Parameters:
	Cut-Point 1 - 8.16, Cut-Point 2 - 15.93
	Website 1 Click Rates - [621.561,303.770,929.361] 
	Website 2 Click Rates - [441.784,1011.036,437.352] 
	Website 3 Click Rates - [868.521,618.245,381.393] 
	Website 4 Click Rates - [683.751,558.649,623.106] 
	Website 5 Click Rates - [438.409,429.434,994.149] 
	Scale Factors - [14.930,13.802,17.175,14.454,16.371,18.452]
================================================================================================
             
             */
            #endregion

            Trace.Write(plan);
        }
    }
}
